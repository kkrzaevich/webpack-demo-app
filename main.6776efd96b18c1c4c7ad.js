(()=>{"use strict";const e=(...e)=>e.every((e=>"number"==typeof e&&!isNaN(e)));class t{constructor(){this.errorBox=document.getElementById("error")}handleAdditionError(t,n){const r=t.reduce(((t,r,s)=>e(n[s])?t+"":t+`${r} is not a number. `),"Please enter two valid numbers! ");this.errorBox.classList.remove("invisible"),this.errorBox.innerText=r}hideErrors(){this.errorBox.classList.add("invisible")}}class n{constructor(){this.numberOneInput=document.getElementById("numberOne"),this.numberTwoInput=document.getElementById("numberTwo"),this.addValuesButton=document.getElementById("addValues"),this.resultDiv=document.getElementById("result")}getInputs(){return[this.numberOneInput.value,this.numberTwoInput.value]}setResult(e){this.resultDiv.innerText=e}onClick(e){this.addValuesButton.addEventListener("click",e)}}var r,s;new t,new n,r=new t,s=new n,r.hideErrors(),s.onClick((()=>{r.hideErrors();const t=s.getInputs(),n=((...e)=>e.map((e=>parseInt(e))))(...t);if(e(...n)){const[e,t]=n;s.setResult(e+t)}else s.setResult(""),r.handleAdditionError(t,n)}))})();